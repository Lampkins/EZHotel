<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cuit.hotel.mapper.HotelInfoMapper">
  <resultMap id="BaseResultMap" type="cuit.hotel.entity.HotelInfo">
    <id column="hotelID" jdbcType="INTEGER" property="hotelID" />
    <result column="hotelName" jdbcType="VARCHAR" property="hotelName" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="score" jdbcType="DOUBLE" property="score" />
    <result column="startingPrice" jdbcType="DOUBLE" property="startingPrice" />
    <result column="imgs" jdbcType="VARCHAR" property="imgs" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cuit.hotel.entity.HotelInfo">
    <result column="introduction" jdbcType="LONGVARCHAR" property="introduction" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    hotelID, hotelName, city, address, phone, score, startingPrice, imgs
  </sql>
  <sql id="Blob_Column_List">
    introduction
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cuit.hotel.entity.HotelInfoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hotel_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cuit.hotel.entity.HotelInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from hotel_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hotel_info
    where hotelID = #{hotelID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hotel_info
    where hotelID = #{hotelID,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cuit.hotel.entity.HotelInfo">
    insert into hotel_info (hotelID, hotelName, city, 
      address, phone, score, 
      startingPrice, imgs, introduction
      )
    values (#{hotelID,jdbcType=INTEGER}, #{hotelName,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{score,jdbcType=DOUBLE},
      #{startingPrice,jdbcType=DOUBLE}, #{imgs,jdbcType=VARCHAR}, #{introduction,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cuit.hotel.entity.HotelInfo">
    insert into hotel_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hotelID != null">
        hotelID,
      </if>
      <if test="hotelName != null">
        hotelName,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="startingPrice != null">
        startingPrice,
      </if>
      <if test="imgs != null">
        imgs,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hotelID != null">
        #{hotelID,jdbcType=INTEGER},
      </if>
      <if test="hotelName != null">
        #{hotelName,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="startingPrice != null">
        #{startingPrice,jdbcType=DOUBLE},
      </if>
      <if test="imgs != null">
        #{imgs,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cuit.hotel.entity.HotelInfo">
    update hotel_info
    <set>
      <if test="hotelName != null">
        hotelName = #{hotelName,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="startingPrice != null">
        startingPrice = #{startingPrice,jdbcType=DOUBLE},
      </if>
      <if test="imgs != null">
        imgs = #{imgs,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where hotelID = #{hotelID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cuit.hotel.entity.HotelInfo">
    update hotel_info
    set hotelName = #{hotelName,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      score = #{score,jdbcType=DOUBLE},
      startingPrice = #{startingPrice,jdbcType=DOUBLE},
      imgs = #{imgs,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=LONGVARCHAR}
    where hotelID = #{hotelID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cuit.hotel.entity.HotelInfo">
    update hotel_info
    set hotelName = #{hotelName,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      score = #{score,jdbcType=DOUBLE},
      startingPrice = #{startingPrice,jdbcType=DOUBLE},
      imgs = #{imgs,jdbcType=VARCHAR}
    where hotelID = #{hotelID,jdbcType=INTEGER}
  </update>
</mapper>