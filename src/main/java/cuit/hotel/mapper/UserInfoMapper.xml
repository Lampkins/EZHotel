<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cuit.hotel.mapper.UserInfoMapper">
  <resultMap id="BaseResultMap" type="cuit.hotel.entity.UserInfo">
    <id column="userID" jdbcType="INTEGER" property="userID" />
    <result column="roleID" jdbcType="INTEGER" property="roleID" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="memberLevel" jdbcType="VARCHAR" property="memberLevel" />
    <result column="fullName" jdbcType="VARCHAR" property="fullName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="mail" jdbcType="VARCHAR" property="mail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userID, roleID, username, password, memberLevel, fullName, phone, gender, mail
  </sql>
  <select id="selectByUsername" parameterType="String" resultMap="BaseResultMap">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    from user_info
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <select id="selectByExample" parameterType="cuit.hotel.entity.UserInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    from user_info
    where userID = #{userID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_info
    where userID = #{userID,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cuit.hotel.entity.UserInfo">
    insert into user_info (userID, roleID, username, 
      password, memberLevel, fullName, 
      phone, gender, mail)
    values (#{userID,jdbcType=INTEGER}, #{roleID,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{memberLevel,jdbcType=VARCHAR}, #{fullName,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, #{mail,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cuit.hotel.entity.UserInfo">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userID != null">
        userID,
      </if>
      <if test="roleID != null">
        roleID,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="memberLevel != null">
        memberLevel,
      </if>
      <if test="fullName != null">
        fullName,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="mail != null">
        mail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userID != null">
        #{userID,jdbcType=INTEGER},
      </if>
      <if test="roleID != null">
        #{roleID,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="memberLevel != null">
        #{memberLevel,jdbcType=VARCHAR},
      </if>
      <if test="fullName != null">
        #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
    </trim>
    <selectKey resultType="java.lang.Integer" keyProperty="userID">
      SELECT @@IDENTITY AS userID
    </selectKey>
  </insert>
  <update id="updateByUsernameRoleIDSelective" parameterType="cuit.hotel.entity.UserInfo">
    update user_info
    <set>
      <if test="roleID != null">
        roleID = #{roleID,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="memberLevel != null">
        memberLevel = #{memberLevel,jdbcType=VARCHAR},
      </if>
      <if test="fullName != null">
        fullName = #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
    </set>
    where username = #{username,jdbcType=VARCHAR} and roleID = #{roleID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cuit.hotel.entity.UserInfo">
    update user_info
    <set>
      <if test="roleID != null">
        roleID = #{roleID,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="memberLevel != null">
        memberLevel = #{memberLevel,jdbcType=VARCHAR},
      </if>
      <if test="fullName != null">
        fullName = #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
    </set>
    where userID = #{userID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cuit.hotel.entity.UserInfo">
    update user_info
    set roleID = #{roleID,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      memberLevel = #{memberLevel,jdbcType=VARCHAR},
      fullName = #{fullName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      mail = #{mail,jdbcType=VARCHAR}
    where userID = #{userID,jdbcType=INTEGER}
  </update>
</mapper>